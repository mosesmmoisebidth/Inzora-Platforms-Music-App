basePath: /api/v1
definitions:
  http.AddFavoriteRequest:
    properties:
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration_ms:
        type: integer
      provider:
        type: string
      provider_track_id:
        type: string
      title:
        type: string
    required:
    - artist
    - provider
    - provider_track_id
    - title
    type: object
  http.AddHistoryRequest:
    properties:
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration_ms:
        type: integer
      provider:
        type: string
      provider_track_id:
        type: string
      title:
        type: string
    required:
    - artist
    - provider
    - provider_track_id
    - title
    type: object
  http.AddTrackToPlaylistRequest:
    properties:
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration_ms:
        type: integer
      provider:
        type: string
      provider_track_id:
        type: string
      title:
        type: string
      track_number:
        type: integer
    required:
    - artist
    - provider
    - provider_track_id
    - title
    type: object
  http.AuthResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
      user:
        $ref: '#/definitions/http.UserResponse'
    type: object
  http.CreatePlaylistRequest:
    properties:
      description:
        maxLength: 500
        type: string
      title:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - title
    type: object
  http.FavoriteResponse:
    properties:
      added_at:
        type: string
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration_ms:
        type: integer
      id:
        type: string
      provider:
        type: string
      provider_track_id:
        type: string
      title:
        type: string
    type: object
  http.GoogleSignInRequest:
    properties:
      id_token:
        type: string
    required:
    - id_token
    type: object
  http.HistoryResponse:
    properties:
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration_ms:
        type: integer
      id:
        type: string
      played_at:
        type: string
      provider:
        type: string
      provider_track_id:
        type: string
      title:
        type: string
    type: object
  http.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  http.LogoutResponse:
    properties:
      message:
        type: string
    type: object
  http.PlaylistResponse:
    properties:
      cover_url:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      share_code:
        type: string
      title:
        type: string
      track_count:
        type: integer
      tracks:
        items:
          $ref: '#/definitions/http.PlaylistTrackResponse'
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  http.PlaylistTrackResponse:
    properties:
      added_at:
        type: string
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration_ms:
        type: integer
      id:
        type: string
      position:
        type: integer
      provider:
        type: string
      provider_track_id:
        type: string
      title:
        type: string
      track_number:
        type: integer
    type: object
  http.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  http.RegisterRequest:
    properties:
      display_name:
        maxLength: 50
        minLength: 2
        type: string
      email:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
    required:
    - display_name
    - email
    - password
    type: object
  http.TokenPair:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  http.TrackResponse:
    properties:
      album:
        type: string
      artist:
        type: string
      artwork_url:
        type: string
      duration:
        description: Changed to int64
        type: integer
      explicit:
        type: boolean
      external_url:
        type: string
      genre:
        type: string
      id:
        type: string
      popularity:
        type: integer
      preview_url:
        type: string
      provider:
        type: string
      release_date:
        description: Changed to string
        type: string
      title:
        type: string
      track_number:
        type: integer
    type: object
  http.UpdatePlaylistRequest:
    properties:
      description:
        maxLength: 500
        type: string
      is_public:
        type: boolean
      title:
        maxLength: 100
        minLength: 3
        type: string
    type: object
  http.UpdateUserRequest:
    properties:
      display_name:
        maxLength: 50
        minLength: 2
        type: string
      photo_url:
        type: string
      preferences:
        additionalProperties: true
        type: object
    type: object
  http.UserResponse:
    properties:
      created_at:
        type: string
      display_name:
        type: string
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      photo_url:
        type: string
      preferences:
        additionalProperties: true
        type: object
      roles:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  response.APIError:
    properties:
      code:
        type: string
      details: {}
      message:
        type: string
    type: object
  response.APIResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
  response.PaginatedData:
    properties:
      items: {}
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  response.SuccessMessage:
    properties:
      message:
        type: string
    type: object
host: localhost:8085
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the backend API for the Music App, providing endpoints for
    authentication, music discovery, playlists, and user library management.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Music App Backend API
  version: 1.2.0
paths:
  /auth/google:
    post:
      consumes:
      - application/json
      description: Authenticate or register a user using a Google ID token.
      parameters:
      - description: Google Sign-In Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.GoogleSignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Google Sign-In
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user with email and password to receive JWT tokens.
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: User login
      tags:
      - Authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Revoke the user's refresh token.
      parameters:
      - description: Logout Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.LogoutResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: User logout
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Obtain a new access token using a valid refresh token.
      parameters:
      - description: Refresh Token Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.TokenPair'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Refresh access token
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, password, and display name.
      parameters:
      - description: Registration Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Register a new user
      tags:
      - Authentication
  /favorites:
    get:
      description: Retrieves a paginated list of the authenticated user's favorite
        tracks.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PaginatedData'
                  - properties:
                      favorites:
                        items:
                          $ref: '#/definitions/http.FavoriteResponse'
                        type: array
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Get favorite tracks
      tags:
      - Library
    post:
      consumes:
      - application/json
      description: Adds a track to the authenticated user's list of favorite tracks.
      parameters:
      - description: Favorite track information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.AddFavoriteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.FavoriteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Add a favorite track
      tags:
      - Library
  /favorites/{favoriteId}:
    delete:
      description: Removes a track from the authenticated user's list of favorite
        tracks.
      parameters:
      - description: Favorite ID
        in: path
        name: favoriteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.SuccessMessage'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Remove a favorite track
      tags:
      - Library
  /history:
    get:
      description: Retrieves a paginated list of the authenticated user's recently
        played tracks.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 50
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PaginatedData'
                  - properties:
                      history:
                        items:
                          $ref: '#/definitions/http.HistoryResponse'
                        type: array
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Get listening history
      tags:
      - Library
    post:
      consumes:
      - application/json
      description: Adds a track to the authenticated user's listening history.
      parameters:
      - description: History track information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.AddHistoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.HistoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Add to listening history
      tags:
      - Library
  /music/search:
    get:
      description: Searches for tracks by a query string, with optional filters.
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - description: Provider to search (e.g., itunes, spotify)
        in: query
        name: provider
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - description: Filter by genre
        in: query
        name: genre
        type: string
      - description: Filter by release year
        in: query
        name: year
        type: integer
      - description: Filter by explicit content
        in: query
        name: explicit
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PaginatedData'
                  - properties:
                      tracks:
                        items:
                          $ref: '#/definitions/http.TrackResponse'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Search for tracks
      tags:
      - Music
  /music/top-charts:
    get:
      description: Retrieves a paginated list of top tracks for a specific country.
      parameters:
      - default: US
        description: Country code (ISO 3166-1 alpha-2)
        in: query
        name: country
        type: string
      - default: itunes
        description: Provider name (e.g., itunes, spotify)
        in: query
        name: provider
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PaginatedData'
                  - properties:
                      tracks:
                        items:
                          $ref: '#/definitions/http.TrackResponse'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Get top charts
      tags:
      - Music
  /music/tracks/{trackId}:
    get:
      description: Retrieves full details for a single track by its ID and provider.
      parameters:
      - description: Track ID
        in: path
        name: trackId
        required: true
        type: string
      - description: Provider name (e.g., itunes, spotify)
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.TrackResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Get a single track
      tags:
      - Music
  /playlists:
    get:
      description: Retrieves a paginated list of the authenticated user's playlists.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PaginatedData'
                  - properties:
                      playlists:
                        items:
                          $ref: '#/definitions/http.PlaylistResponse'
                        type: array
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Get user playlists
      tags:
      - Playlists
    post:
      consumes:
      - application/json
      description: Creates a new playlist for the authenticated user.
      parameters:
      - description: Playlist details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreatePlaylistRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.PlaylistResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Create a new playlist
      tags:
      - Playlists
  /playlists/{playlistId}:
    delete:
      description: Permanently deletes a user's playlist.
      parameters:
      - description: Playlist ID
        in: path
        name: playlistId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.SuccessMessage'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Delete a playlist
      tags:
      - Playlists
    get:
      description: Retrieves details for a single playlist. Can be accessed without
        authentication if the playlist is public.
      parameters:
      - description: Playlist ID
        in: path
        name: playlistId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.PlaylistResponse'
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Get a single playlist
      tags:
      - Playlists
    patch:
      consumes:
      - application/json
      description: Updates a playlist's title, description, or public status.
      parameters:
      - description: Playlist ID
        in: path
        name: playlistId
        required: true
        type: string
      - description: Fields to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdatePlaylistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.PlaylistResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Update a playlist
      tags:
      - Playlists
  /playlists/{playlistId}/tracks:
    post:
      consumes:
      - application/json
      description: Adds a single track to the end of a specified playlist.
      parameters:
      - description: Playlist ID
        in: path
        name: playlistId
        required: true
        type: string
      - description: Track information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.AddTrackToPlaylistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.PlaylistResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Add track to playlist
      tags:
      - Playlists
  /playlists/{playlistId}/tracks/{trackId}:
    delete:
      description: Removes a single track from a specified playlist.
      parameters:
      - description: Playlist ID
        in: path
        name: playlistId
        required: true
        type: string
      - description: Playlist Track ID
        in: path
        name: trackId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.PlaylistResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Remove track from playlist
      tags:
      - Playlists
  /users/me:
    get:
      description: Retrieves the full profile for the user associated with the JWT
        token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.UserResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Get current user profile
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Updates the display name, photo URL, or preferences for the current
        user.
      parameters:
      - description: Fields to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/http.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - Bearer: []
      summary: Update current user profile
      tags:
      - Users
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
